<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.youyu.mapper.UserMapper">

    <resultMap id="route" type="com.youyu.entity.auth.Route">
        <id column="id" property="id"></id>
        <result column="title" property="title"></result>
        <result column="code" property="code"></result>
        <result column="pid" property="pid"></result>
        <result column="description" property="description"></result>
    </resultMap>

    <resultMap type="com.youyu.entity.user.UserActivities" id="UserActivitiesMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
    </resultMap>


    <select id="getAuthRoutes" resultMap="route">
        SELECT *
        FROM bs_route
        WHERE id IN
              (SELECT route_id
               FROM sys_role_route
               WHERE sys_role_route.role_id =
                     (SELECT role_id FROM sys_user_role WHERE user_id = #{id}))
          AND deleted != 1
        ORDER BY id ASC;
    </select>

    <select id="getManageAuthRoutes" resultMap="route">
        SELECT *
        FROM manage_route
        WHERE id IN
              (SELECT route_id
               FROM manage_role_route
               WHERE manage_role_route.role_id =
                     (SELECT role_id FROM manage_user_role WHERE user_id = #{id}))
          AND deleted != 1
        ORDER BY id ASC;
    </select>

    <select id="getRoutesByRoleId" resultMap="route">
        SELECT *
        FROM bs_route
        WHERE id in (SELECT route_id FROM sys_role_route WHERE role_id = #{roleId})
    </select>

    <select id="getUserById" resultType="com.youyu.entity.auth.UserFramework">
        SELECT *
        FROM bs_user
        where id = #{id}
    </select>

    <!--查询动态-->
    <select id="listUserActivities" resultMap="UserActivitiesMap">
        SELECT t.id, t.create_time, t.type
        FROM (
        (SELECT id, create_time, 1 AS type
        FROM bs_post
        WHERE user_id = #{input.userId}
        AND deleted = 0
        <if test="input.userId != input.authorizationUserId">
            AND status = 0
        </if>
        )
        UNION
        (SELECT id, create_time, 2 AS type
        FROM bs_moment
        WHERE user_id = #{input.userId}
        AND deleted = 0
        <if test="input.userId != input.authorizationUserId">
            AND status = 0
        </if>
        )
        UNION
        (SELECT id, create_time, 3 AS type
        FROM bs_note
        WHERE user_id = #{input.userId}
        AND deleted = 0
        <if test="input.userId != input.authorizationUserId">
            AND status = 0
        </if>
        )
        UNION
        (SELECT id, create_time, 4 AS type
        FROM bs_note_chapter
        WHERE FIND_IN_SET(#{input.userId}, user_ids)
        AND deleted = 0
        <if test="input.userId != input.authorizationUserId">
            AND status = 0
        </if>
        )
        ) t
        ORDER BY t.create_time DESC
    </select>
</mapper>
